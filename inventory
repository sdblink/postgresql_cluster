# if dcs_exists: false and dcs_type: "etcd"
# Please specify the ip addresses and connection settings for your environment
# The specified ip addresses will be used to listen by the cluster components.
# Attention! Specify private IP addresses so that the cluster does not listen a public IP addresses.
# For deploying via public IPs, add 'ansible_host=public_ip_address' variable for each node.
#
# "postgresql_exists=true" if PostgreSQL is already exists and running
# "hostname=" variable is optional (used to change the server name)
# "new_node=true" to add a new server to an existing cluster using the add_pgnode.yml playbook
# patroni_tags="key=value" the Patroni tags in "key=value" format separated by commas.
# balancer_tags="key=value" the Balancer tags for the /replica, /sync, /async endpoints. Add the tag to the 'patroni_tags' variable first.

[etcd_cluster]
10.172.0.20
10.172.0.21
10.172.0.22

# if dcs_exists: false and dcs_type: "consul"
[consul_instances]
10.172.0.20 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1
10.172.0.21 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1
10.172.0.22 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1

# if with_haproxy_load_balancing: true
[balancers]
10.172.0.20
10.172.0.21
10.172.0.22

# PostgreSQL nodes
[master]
10.172.0.20 hostname=pgnode01 postgresql_exists=false

[replica]
10.172.0.21 hostname=pgnode02 postgresql_exists=false
10.172.0.22 hostname=pgnode03 postgresql_exists=false

[postgres_cluster:children]
master
replica

[pgbackrest]  # optional (Dedicated Repository Host)


# Connection settings
[all:vars]
ansible_connection='ssh'
ansible_ssh_port='22'
ansible_user='root'
ansible_ssh_pass='password'  # "sshpass" package is required for use "ansible_ssh_pass"
#ansible_ssh_private_key_file=
ansible_python_interpreter='/usr/bin/env python3'

[pgbackrest:vars]
#ansible_user='postgres'
#ansible_ssh_pass='secretpassword'

